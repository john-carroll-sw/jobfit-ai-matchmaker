{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "7981128421892766764"
    }
  },
  "parameters": {
    "solutionName": {
      "type": "string"
    },
    "solutionLocation": {
      "type": "string"
    },
    "keyVaultName": {
      "type": "string"
    },
    "cuLocation": {
      "type": "string"
    },
    "deploymentType": {
      "type": "string"
    },
    "gptModelName": {
      "type": "string"
    },
    "gptModelVersion": {
      "type": "string"
    },
    "gptDeploymentCapacity": {
      "type": "int"
    },
    "embeddingModelName": {
      "type": "string"
    },
    "embeddingModelVersion": {
      "type": "string"
    },
    "embeddingModelCapacity": {
      "type": "int"
    },
    "managedIdentityObjectId": {
      "type": "string"
    },
    "applicationInsightsId": {
      "type": "string"
    },
    "containerRegistryId": {
      "type": "string"
    }
  },
  "variables": {
    "$fxv#0": {
      "ai": {
        "aiSearch": "srch-",
        "aiServices": "aisa-",
        "aiVideoIndexer": "avi-",
        "machineLearningWorkspace": "mlw-",
        "openAIService": "oai-",
        "botService": "bot-",
        "computerVision": "cv-",
        "contentModerator": "cm-",
        "contentSafety": "cs-",
        "customVisionPrediction": "cstv-",
        "customVisionTraining": "cstvt-",
        "documentIntelligence": "di-",
        "faceApi": "face-",
        "healthInsights": "hi-",
        "immersiveReader": "ir-",
        "languageService": "lang-",
        "speechService": "spch-",
        "translator": "trsl-",
        "aiHub": "aih-",
        "aiHubProject": "aihp-"
      },
      "analytics": {
        "analysisServicesServer": "as",
        "databricksWorkspace": "dbw-",
        "dataExplorerCluster": "dec",
        "dataExplorerClusterDatabase": "dedb",
        "dataFactory": "adf-",
        "digitalTwin": "dt-",
        "streamAnalytics": "asa-",
        "synapseAnalyticsPrivateLinkHub": "synplh-",
        "synapseAnalyticsSQLDedicatedPool": "syndp",
        "synapseAnalyticsSparkPool": "synsp",
        "synapseAnalyticsWorkspaces": "synw",
        "dataLakeStoreAccount": "dls",
        "dataLakeAnalyticsAccount": "dla",
        "eventHubsNamespace": "evhns-",
        "eventHub": "evh-",
        "eventGridDomain": "evgd-",
        "eventGridSubscriptions": "evgs-",
        "eventGridTopic": "evgt-",
        "eventGridSystemTopic": "egst-",
        "hdInsightHadoopCluster": "hadoop-",
        "hdInsightHBaseCluster": "hbase-",
        "hdInsightKafkaCluster": "kafka-",
        "hdInsightSparkCluster": "spark-",
        "hdInsightStormCluster": "storm-",
        "hdInsightMLServicesCluster": "mls-",
        "iotHub": "iot-",
        "provisioningServices": "provs-",
        "provisioningServicesCertificate": "pcert-",
        "powerBIEmbedded": "pbi-",
        "timeSeriesInsightsEnvironment": "tsi-"
      },
      "compute": {
        "appServiceEnvironment": "ase-",
        "appServicePlan": "asp-",
        "loadTesting": "lt-",
        "availabilitySet": "avail-",
        "arcEnabledServer": "arcs-",
        "arcEnabledKubernetesCluster": "arck",
        "batchAccounts": "ba-",
        "cloudService": "cld-",
        "communicationServices": "acs-",
        "diskEncryptionSet": "des",
        "functionApp": "func-",
        "gallery": "gal",
        "hostingEnvironment": "host-",
        "imageTemplate": "it-",
        "managedDiskOS": "osdisk",
        "managedDiskData": "disk",
        "notificationHubs": "ntf-",
        "notificationHubsNamespace": "ntfns-",
        "proximityPlacementGroup": "ppg-",
        "restorePointCollection": "rpc-",
        "snapshot": "snap-",
        "staticWebApp": "stapp-",
        "virtualMachine": "vm",
        "virtualMachineScaleSet": "vmss-",
        "virtualMachineMaintenanceConfiguration": "mc-",
        "virtualMachineStorageAccount": "stvm",
        "webApp": "app-"
      },
      "containers": {
        "aksCluster": "aks-",
        "aksSystemNodePool": "npsystem-",
        "aksUserNodePool": "np-",
        "containerApp": "ca-",
        "containerAppsEnvironment": "cae-",
        "containerRegistry": "cr",
        "containerInstance": "ci",
        "serviceFabricCluster": "sf-",
        "serviceFabricManagedCluster": "sfmc-"
      },
      "databases": {
        "cosmosDBDatabase": "cosmos-",
        "cosmosDBApacheCassandra": "coscas-",
        "cosmosDBMongoDB": "cosmon-",
        "cosmosDBNoSQL": "cosno-",
        "cosmosDBTable": "costab-",
        "cosmosDBGremlin": "cosgrm-",
        "cosmosDBPostgreSQL": "cospos-",
        "cacheForRedis": "redis-",
        "sqlDatabaseServer": "sql-",
        "sqlDatabase": "sqldb-",
        "sqlElasticJobAgent": "sqlja-",
        "sqlElasticPool": "sqlep-",
        "mariaDBServer": "maria-",
        "mariaDBDatabase": "mariadb-",
        "mySQLDatabase": "mysql-",
        "postgreSQLDatabase": "psql-",
        "sqlServerStretchDatabase": "sqlstrdb-",
        "sqlManagedInstance": "sqlmi-"
      },
      "developerTools": {
        "appConfigurationStore": "appcs-",
        "mapsAccount": "map-",
        "signalR": "sigr",
        "webPubSub": "wps-"
      },
      "devOps": {
        "managedGrafana": "amg-"
      },
      "integration": {
        "apiManagementService": "apim-",
        "integrationAccount": "ia-",
        "logicApp": "logic-",
        "serviceBusNamespace": "sbns-",
        "serviceBusQueue": "sbq-",
        "serviceBusTopic": "sbt-",
        "serviceBusTopicSubscription": "sbts-"
      },
      "managementGovernance": {
        "automationAccount": "aa-",
        "applicationInsights": "appi-",
        "monitorActionGroup": "ag-",
        "monitorDataCollectionRules": "dcr-",
        "monitorAlertProcessingRule": "apr-",
        "blueprint": "bp-",
        "blueprintAssignment": "bpa-",
        "dataCollectionEndpoint": "dce-",
        "logAnalyticsWorkspace": "log-",
        "logAnalyticsQueryPacks": "pack-",
        "managementGroup": "mg-",
        "purviewInstance": "pview-",
        "resourceGroup": "rg-",
        "templateSpecsName": "ts-"
      },
      "migration": {
        "migrateProject": "migr-",
        "databaseMigrationService": "dms-",
        "recoveryServicesVault": "rsv-"
      },
      "networking": {
        "applicationGateway": "agw-",
        "applicationSecurityGroup": "asg-",
        "cdnProfile": "cdnp-",
        "cdnEndpoint": "cdne-",
        "connections": "con-",
        "dnsForwardingRuleset": "dnsfrs-",
        "dnsPrivateResolver": "dnspr-",
        "dnsPrivateResolverInboundEndpoint": "in-",
        "dnsPrivateResolverOutboundEndpoint": "out-",
        "firewall": "afw-",
        "firewallPolicy": "afwp-",
        "expressRouteCircuit": "erc-",
        "expressRouteGateway": "ergw-",
        "frontDoorProfile": "afd-",
        "frontDoorEndpoint": "fde-",
        "frontDoorFirewallPolicy": "fdfp-",
        "ipGroups": "ipg-",
        "loadBalancerInternal": "lbi-",
        "loadBalancerExternal": "lbe-",
        "loadBalancerRule": "rule-",
        "localNetworkGateway": "lgw-",
        "natGateway": "ng-",
        "networkInterface": "nic-",
        "networkSecurityGroup": "nsg-",
        "networkSecurityGroupSecurityRules": "nsgsr-",
        "networkWatcher": "nw-",
        "privateLink": "pl-",
        "privateEndpoint": "pep-",
        "publicIPAddress": "pip-",
        "publicIPAddressPrefix": "ippre-",
        "routeFilter": "rf-",
        "routeServer": "rtserv-",
        "routeTable": "rt-",
        "serviceEndpointPolicy": "se-",
        "trafficManagerProfile": "traf-",
        "userDefinedRoute": "udr-",
        "virtualNetwork": "vnet-",
        "virtualNetworkGateway": "vgw-",
        "virtualNetworkManager": "vnm-",
        "virtualNetworkPeering": "peer-",
        "virtualNetworkSubnet": "snet-",
        "virtualWAN": "vwan-",
        "virtualWANHub": "vhub-"
      },
      "security": {
        "bastion": "bas-",
        "keyVault": "kv-",
        "keyVaultManagedHSM": "kvmhsm-",
        "managedIdentity": "id-",
        "sshKey": "sshkey-",
        "vpnGateway": "vpng-",
        "vpnConnection": "vcn-",
        "vpnSite": "vst-",
        "webApplicationFirewallPolicy": "waf",
        "webApplicationFirewallPolicyRuleGroup": "wafrg"
      },
      "storage": {
        "storSimple": "ssimp",
        "backupVault": "bvault-",
        "backupVaultPolicy": "bkpol-",
        "fileShare": "share-",
        "storageAccount": "st",
        "storageSyncService": "sss-"
      },
      "virtualDesktop": {
        "labServicesPlan": "lp-",
        "virtualDesktopHostPool": "vdpool-",
        "virtualDesktopApplicationGroup": "vdag-",
        "virtualDesktopWorkspace": "vdws-",
        "virtualDesktopScalingPlan": "vdscaling-"
      }
    },
    "abbrs": "[variables('$fxv#0')]",
    "storageName": "[format('{0}{1}hubs', variables('abbrs').storage.storageAccount, parameters('solutionName'))]",
    "storageSkuName": "Standard_LRS",
    "aiServicesName": "[format('{0}{1}', variables('abbrs').ai.aiServices, parameters('solutionName'))]",
    "aiServicesName_cu": "[format('{0}{1}-cu', variables('abbrs').ai.aiServices, parameters('solutionName'))]",
    "location_cu": "[parameters('cuLocation')]",
    "location": "[parameters('solutionLocation')]",
    "aiHubName": "[format('{0}{1}', variables('abbrs').ai.aiHub, parameters('solutionName'))]",
    "aiHubFriendlyName": "[variables('aiHubName')]",
    "aiHubDescription": "AI Hub for CPS template",
    "aiProjectName": "[format('{0}{1}', variables('abbrs').ai.aiHubProject, parameters('solutionName'))]",
    "aiProjectFriendlyName": "[variables('aiProjectName')]",
    "aiModelDeployments": [
      {
        "name": "[parameters('gptModelName')]",
        "model": "[parameters('gptModelName')]",
        "version": "[parameters('gptModelVersion')]",
        "sku": {
          "name": "[parameters('deploymentType')]",
          "capacity": "[parameters('gptDeploymentCapacity')]"
        },
        "raiPolicyName": "Microsoft.Default"
      },
      {
        "name": "[parameters('embeddingModelName')]",
        "model": "[parameters('embeddingModelName')]",
        "version": "[parameters('embeddingModelVersion')]",
        "sku": {
          "name": "[parameters('deploymentType')]",
          "capacity": "[parameters('embeddingModelCapacity')]"
        },
        "raiPolicyName": "Microsoft.Default"
      }
    ],
    "storageNameCleaned": "[replace(variables('storageName'), '-', '')]"
  },
  "resources": [
    {
      "type": "Microsoft.MachineLearningServices/workspaces/connections",
      "apiVersion": "2024-07-01-preview",
      "name": "[format('{0}/{1}', variables('aiHubName'), format('{0}-connection-AzureOpenAI', variables('aiHubName')))]",
      "properties": {
        "category": "AIServices",
        "target": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName')), '2021-10-01').endpoint]",
        "authType": "AAD",
        "isSharedToAll": true,
        "metadata": {
          "ApiType": "Azure",
          "ResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]",
        "aiServicesDeployments"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-10-01",
      "name": "[variables('aiServicesName')]",
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "sku": {
        "name": "S0"
      },
      "kind": "AIServices",
      "properties": {
        "customSubDomainName": "[variables('aiServicesName')]",
        "apiProperties": {},
        "publicNetworkAccess": "Enabled",
        "disableLocalAuth": true
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-10-01",
      "name": "[variables('aiServicesName_cu')]",
      "location": "[variables('location_cu')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "sku": {
        "name": "S0"
      },
      "kind": "AIServices",
      "properties": {
        "customSubDomainName": "[variables('aiServicesName_cu')]",
        "apiProperties": {},
        "publicNetworkAccess": "Enabled",
        "disableLocalAuth": true
      }
    },
    {
      "copy": {
        "name": "aiServicesDeployments",
        "count": "[length(variables('aiModelDeployments'))]",
        "mode": "serial",
        "batchSize": 1
      },
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', variables('aiServicesName'), variables('aiModelDeployments')[copyIndex()].name)]",
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "[variables('aiModelDeployments')[copyIndex()].model]",
          "version": "[variables('aiModelDeployments')[copyIndex()].version]"
        },
        "raiPolicyName": "[variables('aiModelDeployments')[copyIndex()].raiPolicyName]"
      },
      "sku": "[union(createObject('name', variables('aiModelDeployments')[copyIndex()].sku.name), if(contains(variables('aiModelDeployments')[copyIndex()].sku, 'capacity'), createObject('capacity', variables('aiModelDeployments')[copyIndex()].sku.capacity), createObject()))]",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageNameCleaned')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[variables('storageSkuName')]"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "allowBlobPublicAccess": false,
        "allowCrossTenantReplication": false,
        "allowSharedKeyAccess": true,
        "encryption": {
          "keySource": "Microsoft.Storage",
          "requireInfrastructureEncryption": false,
          "services": {
            "blob": {
              "enabled": true,
              "keyType": "Account"
            },
            "file": {
              "enabled": true,
              "keyType": "Account"
            },
            "queue": {
              "enabled": true,
              "keyType": "Service"
            },
            "table": {
              "enabled": true,
              "keyType": "Service"
            }
          }
        },
        "isHnsEnabled": false,
        "isNfsV3Enabled": false,
        "keyPolicy": {
          "keyExpirationPeriodInDays": 7
        },
        "largeFileSharesState": "Disabled",
        "minimumTlsVersion": "TLS1_2",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceGroup().id, parameters('managedIdentityObjectId'), resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe'))]",
      "properties": {
        "principalId": "[parameters('managedIdentityObjectId')]",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2023-08-01-preview",
      "name": "[variables('aiHubName')]",
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "friendlyName": "[variables('aiHubFriendlyName')]",
        "description": "[variables('aiHubDescription')]",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
        "applicationInsights": "[parameters('applicationInsightsId')]",
        "containerRegistry": "[parameters('containerRegistryId')]"
      },
      "kind": "hub",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
      ]
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2024-01-01-preview",
      "name": "[variables('aiProjectName')]",
      "location": "[variables('location')]",
      "kind": "Project",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "friendlyName": "[variables('aiProjectFriendlyName')]",
        "hubResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]"
      ]
    }
  ],
  "outputs": {
    "aiServicesTarget": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName')), '2021-10-01').endpoint]"
    },
    "aiServicesCUEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName_cu')), '2021-10-01').endpoint]"
    },
    "aiServicesName": {
      "type": "string",
      "value": "[variables('aiServicesName')]"
    },
    "aiServicesId": {
      "type": "string",
      "value": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]"
    },
    "aiServicesCuId": {
      "type": "string",
      "value": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName_cu'))]"
    },
    "aiServicePrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName')), '2021-10-01', 'full').identity.principalId]"
    },
    "aiServiceCuPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName_cu')), '2021-10-01', 'full').identity.principalId]"
    },
    "aiProjectPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiProjectName')), '2024-01-01-preview', 'full').identity.principalId]"
    },
    "aiProjectConnectionString": {
      "type": "string",
      "value": "[format('{0}.api.azureml.ms;{1};{2};{3}', variables('location'), subscription().subscriptionId, resourceGroup().name, variables('aiProjectName'))]"
    },
    "aiProjectName": {
      "type": "string",
      "value": "[variables('aiProjectName')]"
    },
    "aiProjectId": {
      "type": "string",
      "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiProjectName'))]"
    }
  }
}